Step 1 - On GITHUB

Go to Github.com
    Create account
    Create new repository (for free account always public repo)
    copy Link created for repository (e.g. https://github.com/MonishGit/RobotFramework.git)

    RobotFramework


Step 2 - On local Machine
    Download git bash
    configure username and email address (git config --global user.name "MonishGit" and git config --global user.email "pawarmonish@gmail.com"
    Create Local repository
        open Git and create one folder where you want to save your project
        Save automation work in that folder
        All Saved files  will be  in Untrack status initially
        Convert untrack state to Stage by using command "git add "file name" OR git add .
        Convert Stage status to Track files (only after this you can commit)
        Convert Staged file back to Untrack - git reset HEAD "file name"
       -  Add Commit - git commit -m "add your message here"
       -  Convert untrack state to Stage by using command "git add "file name" OR git add .
       -  Convert Stage status to Track files (only after this you can commit)
       -  Add Commit - git commit -m "add your message here"
	   -  Convert Staged file back to Untrack - git reset HEAD FILE NAME
	   -  Check all changes done in fiels "git dif FILE NAME"
	   -  Revert all changes done for specific File "git checkout FILE NAME"

Step 3 - Linkage between Local repository(Git) and Remot repository(Git HUB)
        - check if you have remote repository already  "git remote --v" this will show no response if no remote repository located
        - Link remote repository - "git remote add origin "Link copied in step1"
	

Step 4 - Push code on Master branch ("git push origin master")

Step 5 (for other users) - Clone repository
                         - Create new work location in new user matchine
                         - navigate to that folder and clone repo "git clone "URL noted in step 1"


 *** Running code in Jenkin itself
Step 1 - Create Batch files
            Open notepad enter all libraris you want to run as a part of code along with pip install command
                e.g. pip install robotframework
                     pip install robotframework-SeleniumLibrary
                     pip install robotframework-requests

                Save your file in .bat extention e.g. lib.bat

            - Setup Driver - This is required to run your test case on diff platform e.g. chrome driver for web test, appium for mobile
                             Go to Python2.7>Script copy chromedriver.exe - create folder "driver" in project and paste .exe


**********************Setup Jenkins********************* IMP

Step 1 - Download jdk 1.8 from oracal site
            run .exe and verify it java installed succesfully by - open CMD run java -version

Step 2 - Download jenkin War file -
            navigate to the location where war file saved
            to Setup Jenkin portal - Open CMD and run command = "java -jar jenkins.war --httpPort=8080" (this is default port you can set anything around 808*)
            open browser search for localhost:8080
            Install all suggested plugins

Step 3 - Configure Java Path
            Click on Manage Jenkins option on Jenkin portal - Global Tool Configuration
            Click on Add JDK - Name = JAV_HOMES
            Give Full path to JDK folder e.g. C:\Program Files\Java\jdk1.2

         - Configure GIT Path
            Click on Add Git - Name = GIT_HOMES
            Give full path to Git e.g. C:\Program Files\Git\bin

         - Python setup
            Install latest Python.exe - Run it and save custimize the location to C:
            Go to Mycomputer and sentup enviroment variable for python on path variable
            Open Jenkins Go to Manage Jenkins - Configuration
            Go to Gobal properties - Environment variable
            Enter Name = Python_homes
            Python path = C:\Python38
            Add another variable = Python_script  and Path  C:/Python38/Scripts (make sure you have chrome driver exe under script folder, this is required to run web app)


Step 4- Configure jenkin reporting tool - Allure report
        - Install Allure plugin - open Jenkin > Click on Manage plugin > Install Allure Plugin
        - Download Allure command line (this is Zip file on Github) - this converts xml report in html
        - Configure Commandline tool in Jenkins - Open Manage Goble variable - Add Allure command line path
        - Check if All global variables are setup succesfully - Click on New project and wait to create project - check Git is available on dashboard and Allure under Postbuild actions - Allure report

Step 5 - Crate Job on Jenkins
        - Fetch Code from Github - Go to Jenkins open New Item (free stype)
            -Source code management - Select Git - Pass Github URL of your project  - Apply and Save
            - Click on Build now - Check console output is success

        - Set environment veriable and Libraries - click on Configure project - Buid - Add- Executable windows batch command-
            - in Command box - Set Path=%Python_Home%;%Path%
                             -












